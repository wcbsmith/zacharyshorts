{"version":3,"sources":["Components/SecretSanta/SmtpService.js","Components/SecretSanta/SecretSanta.js","App.js","serviceWorker.js","index.js"],"names":["SmtpService","send","e","o","t","n","a","s","r","c","d","Math","floor","random","i","concat","encodeURIComponent","token","callback","_this","ajaxPost","sendWithAttachment","m","createCORSRequest","setRequestHeader","onload","responseText","ajax","XMLHttpRequest","open","XDomainRequest","Component","SecretSanta","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","shuffle","array","temporaryValue","randomIndex","currentIndex","length","handleName","event","setState","nameToBeAdded","target","value","handleEmail","emailToBeAdded","handleSpouseName","spouseNameToBeAdded","handleSpouseEmail","spouseEmailToBeAdded","sendEmail","participant","sender","email_body","giver","name","receiver","email","makePairs","state","participants","pairedParticipants","push","shuffledParticipants","submitNames","forEach","setTimeout","savePDF","doc","jsPDF","fromHTML","$","html","width","elementHandlers","#editor","element","renderer","save","year","handleEnter","bind","assertThisInitialized","document","addEventListener","handleKeyPress","click","animate","scrollTop","offset","top","Date","getFullYear","removeEventListener","spouse","spouseEmail","pairedCorrectly","pairedCorrectly2","j","alert","react_default","createElement","src","className","id","placeholder","onChange","type","onClick","href","map","key","pair","App","Components_SecretSanta_SecretSanta","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.628aea5d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport XDomainRequest from 'ajax';\n\nclass SmtpService extends Component {\n    /* https://smtpjs.com/ */\n    /* SmtpJS.com - v2.0.1 */\n\n\n    send = (e, o, t, n, a, s, r, c) => {\n        let d = Math.floor(1e6 * Math.random() + 1);\n        let i = `From=${e}&to=${o}&Subject=${encodeURIComponent(\n            t\n        )}&Body=${encodeURIComponent(n)}`;\n\n        if (!a.token) {\n            i += `&Host=${a}&Username=${s}&Password=${r}&Action=Send`;\n        } else {\n            i += `&SecureToken=${a.token}&Action=SendFromStored`;\n            c = a.callback;\n        }\n        i += '&cachebuster=' + d;\n\n        this.ajaxPost('https://smtpjs.com/v2/smtp.aspx?', i, c);\n    };\n\n    sendWithAttachment = (e, o, t, n, a, s, r, c, d) => {\n        let i = Math.floor(1e6 * Math.random() + 1);\n        let m = `From=${e}&to=${o}&Subject=${encodeURIComponent(\n            t\n        )}&Body=${encodeURIComponent(n)}&Attachment=${encodeURIComponent(c)}`;\n\n        if (!a.token) {\n            m += `&Host=${a}&Username=${s}&Password=${r}&Action=Send`;\n        } else {\n            m += `&SecureToken=${a.token}&Action=SendFromStored`;\n        }\n\n        m += `&cachebuster=${i}`;\n\n        this.ajaxPost('https://smtpjs.com/v2/smtp.aspx?', m, d);\n    };\n    ajaxPost = (e, o, t) => {\n        let n = this.createCORSRequest('POST', e);\n        n.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        n.onload = () => {\n            let e = n.responseText;\n            if (t) t(e);\n        };\n        n.send(o);\n    };\n    ajax = (e, o) => {\n        let t = this.createCORSRequest('GET', e);\n        t.onload = () => {\n            let e = t.responseText;\n            if (o) o(e);\n        };\n        t.send();\n    };\n    createCORSRequest = (e, o) => {\n        let t = new XMLHttpRequest();\n        return (\n            'withCredentials' in t\n                ? t.open(e, o, !0)\n                : 'undefined' !== typeof XDomainRequest\n                ? (t = new XDomainRequest()).open(e, o)\n                : (t = null),\n                t\n        );\n    };\n}\n\nexport default SmtpService;","import React, { Component } from 'react';\nimport './SecretSanta.css'\nimport $ from 'jquery';\nimport jsPDF from 'jspdf';\nimport SmtpService from \"./SmtpService\";\n\nclass SecretSanta extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            participants: [],\n            nameToBeAdded: '',\n            emailToBeAdded: '',\n            spouseNameToBeAdded: '',\n            spouseEmailToBeAdded: '',\n            pairedParticipants: [],\n            shuffledParticipants: [],\n            // shuffledParticipants: [{email:\"k\",name:\"k\",spouse:\"m\",spouseEmail:\"m\"},{email:\"z\",name:\"z\",spouse:\"e\",spouseEmail:\"e\"},{email:\"d\",name:\"d\"},{email:\"s\",name:\"s\"}],\n            year: '',\n        };\n\n        this.handleEnter = this.handleEnter.bind(this);\n    }\n\n\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n        $(\"#submit\").click(function () {\n            $('html, body').animate({\n                scrollTop: $(\"#results\").offset().top\n            }, 1000);\n        });\n        this.setState({year: new Date().getFullYear()})\n\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyPress);\n\n    }\n\n    shuffle = (array) => {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    };\n\n    handleName = (event) => {\n        this.setState({nameToBeAdded: event.target.value});\n    };\n\n    handleEmail = (event) => {\n        this.setState({emailToBeAdded: event.target.value});\n    };\n\n    handleSpouseName = (event) => {\n        this.setState({spouseNameToBeAdded: event.target.value});\n    };\n\n    handleSpouseEmail = (event) => {\n        this.setState({spouseEmailToBeAdded: event.target.value});\n    };\n\n    handleEnter() {\n\n        if(this.state.nameToBeAdded !== '' && this.state.emailToBeAdded !== '') {\n            if(this.state.spouseNameToBeAdded !== '' && this.state.spouseEmailToBeAdded !== '') {\n                // eslint-disable-next-line\n                this.state.pairedParticipants = [];\n                this.state.participants.push({\n                    name: this.state.nameToBeAdded,\n                    email: this.state.emailToBeAdded,\n                    spouse: this.state.spouseNameToBeAdded,\n                    spouseEmail: this.state.spouseEmailToBeAdded,\n                });\n                this.state.shuffledParticipants.push({\n                    name: this.state.nameToBeAdded,\n                    email: this.state.emailToBeAdded,\n                    spouse: this.state.spouseNameToBeAdded,\n                    spouseEmail: this.state.spouseEmailToBeAdded,\n                });\n                this.state.participants.push({\n                    spouse: this.state.nameToBeAdded,\n                    spouseEmail: this.state.emailToBeAdded,\n                    name: this.state.spouseNameToBeAdded,\n                    email: this.state.spouseEmailToBeAdded,\n                });\n                this.state.shuffledParticipants.push({\n                    spouse: this.state.nameToBeAdded,\n                    spouseEmail: this.state.emailToBeAdded,\n                    name: this.state.spouseNameToBeAdded,\n                    email: this.state.spouseEmailToBeAdded,\n                });\n                this.setState({\n                    nameToBeAdded: '',\n                    emailToBeAdded: '',\n                    spouseNameToBeAdded: '',\n                    spouseEmailToBeAdded: '',\n                });\n                this.shuffle(this.state.shuffledParticipants);\n                let pairedCorrectly = false;\n                if(this.state.shuffledParticipants.length > 3) {\n                    while (pairedCorrectly !== true) {\n                        for (let i = 0; i < this.state.shuffledParticipants.length; i++) {\n                            if (i !== this.state.shuffledParticipants.length - 1) {\n                                if (this.state.shuffledParticipants[i].spouse === this.state.shuffledParticipants[i + 1].name || this.state.shuffledParticipants[i].name === this.state.shuffledParticipants[i + 1].spouse) {\n                                    i = -1;\n                                    this.shuffle(this.state.shuffledParticipants);\n                                    continue;\n                                }\n                            } else {\n                                if (this.state.shuffledParticipants[i].spouse === this.state.shuffledParticipants[0].name || this.state.shuffledParticipants[i].name === this.state.shuffledParticipants[0].spouse) {\n                                    i = -1;\n                                    this.shuffle(this.state.shuffledParticipants);\n                                    continue;\n                                }\n                            }\n                            pairedCorrectly = true;\n                        }\n\n\n                    }\n                }\n                if(this.state.shuffledParticipants.length > 3){\n                    this.makePairs()\n                }\n            }\n\n            else {\n                // eslint-disable-next-line\n                this.state.pairedParticipants = [];\n                this.state.participants.push({\n                    name: this.state.nameToBeAdded,\n                    email: this.state.emailToBeAdded,\n                });\n                this.state.shuffledParticipants.push({\n                    name: this.state.nameToBeAdded,\n                    email: this.state.emailToBeAdded,\n                });\n                this.setState({\n                    nameToBeAdded: '',\n                    emailToBeAdded: '',\n                });\n                this.shuffle(this.state.shuffledParticipants);\n\n                let pairedCorrectly2 = false;\n                if(this.state.shuffledParticipants.length > 3) {\n                    while (pairedCorrectly2 !== true) {\n                        for (let j = 0; j < this.state.shuffledParticipants.length; j++) {\n                            if (j !== this.state.shuffledParticipants.length - 1) {\n                                if (this.state.shuffledParticipants[j].spouse === this.state.shuffledParticipants[j + 1].name || this.state.shuffledParticipants[j].name === this.state.shuffledParticipants[j + 1].spouse) {\n                                    j = -1;\n                                    this.shuffle(this.state.shuffledParticipants);\n                                    continue;\n                                }\n                            } else {\n                                if (this.state.shuffledParticipants[j].spouse === this.state.shuffledParticipants[0].name || this.state.shuffledParticipants[j].name === this.state.shuffledParticipants[0].spouse) {\n                                    j = -1;\n                                    this.shuffle(this.state.shuffledParticipants);\n                                    continue;\n                                }\n                            }\n                            pairedCorrectly2 = true;\n                        }\n\n\n                    }\n                }\n                if(this.state.shuffledParticipants.length > 3){\n                    this.makePairs()\n                }\n            }\n\n        } else {\n            alert('Fill out all required fields')\n        }\n\n    };\n\n    sendEmail = (participant) => {\n        let sender = new SmtpService();\n\n        let email_body = `${participant.giver.name},  thank you for participating in Secret Santa this year!  You will have the chance to give a gift to ${participant.receiver.name}.  Please spend around $10-20 and make the gift meaningful.  Ask for help if you need it!  Merry Christmas!`;\n\n        sender.send(\"shorts23@gmail.com\",\n            `${participant.giver.email}`,\n            \"Secret Santa\",\n            email_body,\n            {token: \"e3c91f86-1f3c-4a0b-9719-2f61af0b156b\"});\n    };\n\n    makePairs = () => {\n        // Create the paired participants list\n\n        for(let i = 0; i < this.state.participants.length; i++) {\n            if(i !== this.state.participants.length-1){\n\n                this.state.pairedParticipants.push({\n                    giver: this.state.shuffledParticipants[i],\n                    receiver: this.state.shuffledParticipants[i+1],\n                })\n            } else {\n                this.state.pairedParticipants.push({\n                    giver: this.state.shuffledParticipants[i],\n                    receiver: this.state.shuffledParticipants[0],\n                })\n            }\n\n        }\n\n\n    };\n\n    submitNames = () => {\n        this.state.pairedParticipants.forEach((participant) => {\n            setTimeout(this.sendEmail(participant),1000);\n        });\n    };\n\n    savePDF = () => {\n\n        let doc = new jsPDF();\n        let specialElementHandlers = {\n            '#editor': function (element, renderer) {\n                return true;\n            }\n        };\n\n        doc.fromHTML($('#content').html(), 15, 15, {\n            'width': 170,\n            'elementHandlers': specialElementHandlers\n        });\n\n        doc.save(`secret-santa-${this.state.year}.pdf`);\n\n    };\n\n    render() {\n\n\n        return (\n            <div>\n                <script src=\"https://smtpjs.com/v2/smtp.js\">\n                </script>\n                <div className='santa-page'>\n                    <h2>secret santa</h2>\n                    <div className='top-bar'>\n                        <span>\n                            <input id='input' placeholder='Enter name' value={this.state.nameToBeAdded} onChange={this.handleName}/>\n                            <input type='email' placeholder='Enter email' value={this.state.emailToBeAdded} onChange={this.handleEmail}/>\n                            <button className='add-name' onClick={this.handleEnter}>Add Name</button>\n                            <a id='submit' href='#results'><button className='submit-names' onClick={this.submitNames}>Submit All Names</button></a>\n                            <br/>\n                            <p>Input spouse name below if you do not want to receive them as your secret santa.</p>\n                            <input id='spouse' placeholder='Enter spouse name' value={this.state.spouseNameToBeAdded} onChange={this.handleSpouseName}/>\n                            <input type='spouse-email' placeholder='Enter spouse email' value={this.state.spouseEmailToBeAdded} onChange={this.handleSpouseEmail}/>\n\n                        </span>\n                        <div className='name-list'>\n                            <p>Participants: </p>\n                            {\n                                this.state.participants.map((participant, i) => {\n                                    return <p key={i}>{participant.name}</p>\n                                })\n                            }\n                        </div>\n                    </div>\n                    <div>\n\n                    </div>\n                </div>\n                <div className='results' id='results'>\n                    <h2>results</h2>\n                    <p><strong>Your results have been emailed to all participants</strong></p>\n                    <p>Results might be found in a spam folder</p>\n                    <div className='hide' id='content'>\n                        <h2>Secret Santa {this.state.year}</h2>\n                        {\n                            this.state.pairedParticipants.map((pair, i) => {\n                                return <p key={i}>{`${pair.giver.name} gives to ${pair.receiver.name}`}</p>\n                            })\n                        }\n                    </div>\n                    <div id=\"editor\"></div>\n                    <button id='print' onClick={this.savePDF}>Save as PDF</button>\n\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default SecretSanta;\n","import React, { Component } from 'react';\nimport './App.css';\nimport SecretSanta from \"./Components/SecretSanta/SecretSanta\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SecretSanta/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}